/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Modelo.*;
import com.db4o.*;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Luis Miguel
 */
public class OpcionesProfesor extends javax.swing.JFrame {
    Validaciones vali = new Validaciones();
    private String cedula, edad, nombres, apellidos, telefono, direccion;
    private String titulo;
    private boolean validar, ced, eda, nomb, apell, telef, dire;

    /**
     * Creates new form OpcionesProfesor
     */
    public OpcionesProfesor() {
        initComponents();
        mostrarTabla();
        this.setLocationRelativeTo(null);
        this.setTitle("Registro de Profesor");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtcurso = new javax.swing.JLabel();
        txtnombrProf = new javax.swing.JTextField();
        txtApelliProf = new javax.swing.JTextField();
        TxtedadProf = new javax.swing.JTextField();
        txtrgtroAlumno = new javax.swing.JLabel();
        txttlfProf = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaRgtrProf = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtdireccionProf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        BtnRegistroProf = new javax.swing.JButton();
        btnModProf = new javax.swing.JButton();
        BtnEliminProf = new javax.swing.JButton();
        BtnRegresarProf = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboxcursos = new javax.swing.JComboBox<>();
        txtcedulaProf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtcurso.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        txtcurso.setText("Especialidad");
        getContentPane().add(txtcurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 364, 108, 26));
        getContentPane().add(txtnombrProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 102, 219, -1));
        getContentPane().add(txtApelliProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 157, 219, -1));
        getContentPane().add(TxtedadProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 209, 219, -1));

        txtrgtroAlumno.setFont(new java.awt.Font("Papyrus", 2, 24)); // NOI18N
        txtrgtroAlumno.setText("Registro de Profesores");
        getContentPane().add(txtrgtroAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 0, 260, 47));
        getContentPane().add(txttlfProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 266, 219, -1));

        TablaRgtrProf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Apellido", "Edad", "Especialidad"
            }
        ));
        jScrollPane1.setViewportView(TablaRgtrProf);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 685, 101));

        jLabel2.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        jLabel2.setText("Cedula");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 56, 71, -1));
        getContentPane().add(txtdireccionProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 325, 219, -1));

        jLabel3.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        jLabel3.setText("Nombres");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 97, 93, 26));

        jLabel4.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        jLabel4.setText("Apellidos");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 152, -1, 26));

        jLabel5.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        jLabel5.setText("Edad");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 204, 71, 26));

        BtnRegistroProf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnRegistroProf.setText("REGISTRAR");
        BtnRegistroProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistroProfActionPerformed(evt);
            }
        });

        btnModProf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnModProf.setText("MODIFICAR");
        btnModProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModProfActionPerformed(evt);
            }
        });

        BtnEliminProf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnEliminProf.setText("ELIMINAR");
        BtnEliminProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminProfActionPerformed(evt);
            }
        });

        BtnRegresarProf.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        BtnRegresarProf.setText("REGRESAR");
        BtnRegresarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegresarProfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(BtnRegresarProf, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(BtnEliminProf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModProf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BtnRegistroProf)
                        .addGap(30, 30, 30)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(BtnRegistroProf)
                .addGap(18, 18, 18)
                .addComponent(btnModProf)
                .addGap(37, 37, 37)
                .addComponent(BtnEliminProf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addComponent(BtnRegresarProf, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, -1, -1));

        jLabel6.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        jLabel6.setText("Telefono");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 261, 71, 26));

        jLabel7.setFont(new java.awt.Font("Roboto Thin", 1, 18)); // NOI18N
        jLabel7.setText("Direccion");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 320, 120, 26));

        cboxcursos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Canto", "Guitarra", "Piano", "Bateria" }));
        cboxcursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxcursosActionPerformed(evt);
            }
        });
        getContentPane().add(cboxcursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 369, -1, -1));

        txtcedulaProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcedulaProfActionPerformed(evt);
            }
        });
        getContentPane().add(txtcedulaProf, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 59, 219, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fondo_crud.jpeg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnEliminProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminProfActionPerformed
        ObjectContainer BaseBD = Conexion.ConectarBD();

        String cedu = JOptionPane.showInputDialog("Ingrese el numero de cedula del profesor que desa eliminar ");
        cedula = cedu;
        Profesor Pbuscar = new Profesor(null, cedula, null, null, null, null, null);
        ObjectSet resul = BaseBD.get(Pbuscar);

        if (validar_Profesorc(BaseBD, cedula)) {
            eliminarProfesor(BaseBD, cedula);
        } else {
            JOptionPane.showMessageDialog(null, "¡El Alumno no está registrado en la base de datos!");
        }
        BaseBD.close();
        mostrarTabla();
    }//GEN-LAST:event_BtnEliminProfActionPerformed

    private void BtnRegresarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegresarProfActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnRegresarProfActionPerformed

    private void cboxcursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxcursosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxcursosActionPerformed

    private void txtcedulaProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcedulaProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulaProfActionPerformed

    private void BtnRegistroProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistroProfActionPerformed
        ObjectContainer BaseBD = Conexion.ConectarBD();
        if (txtcedulaProf.getText().equals("") || txtnombrProf.getText().equals("") || txtApelliProf.getText().equals("") || TxtedadProf.getText().equals("")
                || txtdireccionProf.getText().equals("") || txttlfProf.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
        } else {
            cedula = txtcedulaProf.getText().trim();
            nombres = txtnombrProf.getText().trim();
            apellidos = txtApelliProf.getText().trim();
            edad = TxtedadProf.getText().trim();
            direccion = txtdireccionProf.getText().trim();
            telefono = txttlfProf.getText().trim();
            titulo = cboxcursos.getSelectedItem().toString();
            Profesor profe = new Profesor(titulo, cedula, edad, nombres, apellidos, telefono, direccion);
            if (Validar_Profesor(BaseBD, cedula) == 0) {
               if (vali.validarCedula(cedula)) {
                    if (vali.validarApellidosyNombre(nombres)) {
                        if (vali.validarApellidosyNombre(apellidos)) {
                            if (vali.validarEdad(edad)) {
                                if (vali.validarTelefono(telefono)) {
                                    if (vali.validarTextoConEspacio(direccion)) {
                                        BaseBD.set(profe);
                                        JOptionPane.showMessageDialog(null, "El profesor fue guardado exitosamente!");
                                        limpiarLabel();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "La direccion solo debe de contener letras");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Ingrese un numero telefonico valido (09)");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Ingrese una edad correcta");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Debe ingresar sus dos apellidos correctos, intente nuevamente");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Debe ingresar sus dos nombres correctos, intente nuevamente");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El numero de cedula es incorrecto intente nuevamente");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El Profesor ya existe, no se puede registrar");
            }
            BaseBD.close();
            mostrarTabla();
        }
    }//GEN-LAST:event_BtnRegistroProfActionPerformed

    private void btnModProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModProfActionPerformed
        ObjectContainer BaseBD = Conexion.ConectarBD();
        String cedu = JOptionPane.showInputDialog("Ingrese el numero de cedula del profesor que desa Modificar: ");
        cedula = cedu;
        Profesor Pbuscar = new Profesor(null, cedula, null, null, null, null, null);
        ObjectSet resul = BaseBD.get(Pbuscar);

        if (!cedula.equals("") && validar_Profesorc(BaseBD, cedula)) {
            
            txtcedulaProf.setText(cedula);
            txtcedulaProf.setEnabled(false);
            Profesor profeM = (Profesor) resul.next();
            String nom = JOptionPane.showInputDialog("Ingrese los nombres del profesor");
            txtnombrProf.setText(nom);
            String ap = JOptionPane.showInputDialog("Ingrese los apellidos del profesor");
            txtApelliProf.setText(ap);
            String ed = JOptionPane.showInputDialog("Ingrese la edad del profesor");
            TxtedadProf.setText(ed);
            String tel = JOptionPane.showInputDialog("Ingrese el telefono del profesor");
            txttlfProf.setText(tel);
            String dir = JOptionPane.showInputDialog("Ingrese la direccion del profesor");
            txtdireccionProf.setText(dir);
            String cur = (JOptionPane.showInputDialog(null, "Selecciona la especialidad", "Cursos", JOptionPane.PLAIN_MESSAGE, null, new Object[]{
                "Selecciona", "Canto", "Guitarra", "Piano", "Bateria"}, "Selecciona")).toString();
            cboxcursos.addItem(cur);
            profeM.setNombres(nom);
            profeM.setApellidos(ap);
            profeM.setEdad(ed);
            profeM.setDireccion(dir);
            profeM.setTelefono(tel);
            profeM.setTitulo_prof(cur);
            JOptionPane.showMessageDialog(null, "¡El profesor ha sido modificado con exito!");
            BaseBD.set(profeM);
        } else {
            JOptionPane.showMessageDialog(null, "¡El profesor no está registrado en la base de datos!");
        }
        txtcedulaProf.setEnabled(true);
        limpiarLabel();
        BaseBD.close();
        mostrarTabla();
    }//GEN-LAST:event_btnModProfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpcionesProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpcionesProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpcionesProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpcionesProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpcionesProfesor().setVisible(true);
            }
        });
    }

    public void eliminarProfesor(ObjectContainer BaseBD, String dni) {

        Profesor Vprofe = new Profesor(null, cedula, null, null, null, null, null);

        ObjectSet resul = BaseBD.get(Vprofe);

        if (resul.hasNext()) {
            Alumno alumnoE = (Alumno) resul.next();
            BaseBD.delete(alumnoE);

        }
    }

    public static int Validar_Profesor(ObjectContainer BaseBD, String cedula) {

        Profesor Pbuscar = new Profesor(null, cedula, null, null, null, null, null);

        ObjectSet resul = BaseBD.get(Pbuscar);
        return resul.size();
    }

    public boolean validar_Profesorc(ObjectContainer BaseBD, String cedula) {

        Profesor Vprofe = new Profesor(null, cedula, null, null, null, null, null);

        ObjectSet resul = BaseBD.get(Vprofe);

        validar = resul.hasNext();
        return validar;
    }

    public void limpiarLabel() {
        txtcedulaProf.setText("");
        txtnombrProf.setText("");
        txtApelliProf.setText("");
        TxtedadProf.setText("");
        txtdireccionProf.setText("");
        txttlfProf.setText("");
    }

    public void mostrarTabla() {

        ObjectContainer BaseBD = Conexion.ConectarBD();
        Profesor Tprofe = new Profesor(null, null, null, null, null, null, null);
        ObjectSet resul = BaseBD.get(Tprofe);

        String matriz[][] = new String[resul.size()][7];

        for (int i = 0; i < resul.size(); i++) {
            Profesor profeG = (Profesor) resul.next();
            matriz[i][0] = profeG.getCedula().toUpperCase();
            matriz[i][1] = profeG.getNombres().toUpperCase();
            matriz[i][2] = profeG.getApellidos().toUpperCase();
            matriz[i][3] = profeG.getEdad();
            matriz[i][4] = profeG.getTelefono();
            matriz[i][5] = profeG.getDireccion().toUpperCase();
            matriz[i][6] = String.valueOf(profeG.getTitulo_prof()).toUpperCase();
        }
        TablaRgtrProf.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "Cedula", "Nombres", "Apellidos", "Edad", "Telefono", "Direccion", "Especialidad"
                }
        ));
        BaseBD.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEliminProf;
    private javax.swing.JButton BtnRegistroProf;
    private javax.swing.JButton BtnRegresarProf;
    private javax.swing.JTable TablaRgtrProf;
    private javax.swing.JTextField TxtedadProf;
    private javax.swing.JButton btnModProf;
    private javax.swing.JComboBox<String> cboxcursos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApelliProf;
    private javax.swing.JTextField txtcedulaProf;
    private javax.swing.JLabel txtcurso;
    private javax.swing.JTextField txtdireccionProf;
    private javax.swing.JTextField txtnombrProf;
    private javax.swing.JLabel txtrgtroAlumno;
    private javax.swing.JTextField txttlfProf;
    // End of variables declaration//GEN-END:variables
}
